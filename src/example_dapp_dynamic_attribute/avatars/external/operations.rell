
// one of the options for checking attributes and can be decided by user of lib
operation register_and_mint_avatar(
  name,
  symbol: text,
  decimals: integer,
  blockchain_rid: byte_array,
  icon_url: text,
  type: text = ft_assets.ASSET_TYPE_FT4,
  attributes: list<(
    attribute_name: text,
    type: originals_light_attributes.attribute_type,
    attribute_value: byte_array
  )>,
  accounts: list<byte_array>,
  amount: big_integer
){
  originals_light_attributes.check_required_attributes(
    attributes, 
    list([(attribute_name ="fishes_caught", type = originals_light_attributes.attribute_type.big_integer)])
  );

  val asset = originals_light_assets.register_asset(
    name,
    symbol,
    decimals,
    blockchain_rid,
    icon_url,
    type,
    attributes
  );

  originals_light_assets.mint_asset(
    asset.id,
    amount,
    accounts
  );
}

// one of the options for checking attributes and can be decided by user of lib
operation register_and_mint_fishing_rod(
  name,
  symbol: text,
  decimals: integer,
  blockchain_rid: byte_array,
  icon_url: text,
  type: text = ft_assets.ASSET_TYPE_FT4,
  attributes: list<(
    attribute_name: text,
    type: originals_light_attributes.attribute_type,
    attribute_value: byte_array
  )>,
  accounts: list<byte_array>,
  amount: big_integer
){
  originals_light_attributes.check_required_attributes(
    attributes, 
    list([(attribute_name = "durability", type = originals_light_attributes.attribute_type.big_integer)])
  );

  val asset = originals_light_assets.register_asset(
    name,
    symbol,
    decimals,
    blockchain_rid,
    icon_url,
    type,
    attributes
  );

  originals_light_assets.mint_asset(
    asset.id,
    amount,
    accounts
  );
}

// simple registration without auth descriptors for test purposes
// todo matCzelusniak - add support for registration with ft4 functions.
operation register_account (
  account_id: byte_array,
  name: text
) {
  create ft_accounts.account(
    id = account_id, 
    name
  );
}

operation equip_fishing_rod(avatar_id: byte_array, fishing_rod_id: byte_array) {
  avatars.equip_fishing_rod(
    avatar_id,
    fishing_rod_id
  );
}

operation unequip_fishing_rod(avatar_id: byte_array) {
  avatars.unequip_fishing_rod(
    avatar_id
  );
}

operation pull_fish(avatar_id: byte_array) {
  avatars.pull_fish(
    avatar_id
  );
}